{"version":3,"sources":["components/Timer.js","components/Session.js","components/Break.js","components/App.js","reportWebVitals.js","index.js"],"names":["Timer","props","state","timerSecond","intervalId","isBreak","isRunning","handleClick","bind","decrementTimer","reset","this","clearInterval","setState","setInterval","blockButtonsIfPlaying","timerMinute","audio","play","switchToSession","switchToBreak","decrementTimerMinute","pause","currentTime","className","id","onClick","ref","src","React","Component","Session","disabled","isPlaying","sessionLength","decrementSessionLength","incrementSessionLength","Break","breakLength","decrementBreakLength","incrementBreakLength","App","onDecrementBreakLength","onIncrementBreakLength","onIncrementSessionLength","onDecrementSessionLength","onDecrementTimerMinute","onSwitchToBreak","onReset","onSwitchToSession","onBlockButtonsIfPlaying","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b192e034.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timerSecond: 0,\n      intervalId: 0,\n      isBreak: false,\n      isRunning: false,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.decrementTimer = this.decrementTimer.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  handleClick() {\n    if (!this.state.isRunning) {\n      let intervalId = setInterval(this.decrementTimer, 1000);\n      this.setState({\n        isRunning: true,\n        intervalId: intervalId,\n      });\n      this.props.blockButtonsIfPlaying(true);\n    } else {\n      clearInterval(this.state.intervalId);\n\n      this.setState({\n        isRunning: false,\n      });\n    }\n  }\n\n  decrementTimer() {\n    switch (this.state.timerSecond) {\n      case 0:\n        if (this.props.timerMinute === 0) {\n          this.audio.play();\n          if (!this.state.isBreak) {\n            this.setState({\n              isBreak: true,\n            });\n            this.props.switchToBreak();\n          } else {\n            this.setState({\n              isBreak: false,\n            });\n            this.props.switchToSession();\n          }\n        } else {\n          this.props.decrementTimerMinute();\n          this.setState({\n            timerSecond: 59,\n          });\n        }\n        break;\n      default:\n        this.setState({\n          timerSecond: this.state.timerSecond - 1,\n        });\n        break;\n    }\n  }\n\n  reset() {\n    this.setState({\n      isRunning: false,\n      isBreak: false,\n      timerSecond: 0,\n      intervalId: 0,\n    });\n    this.props.reset();\n    clearInterval(this.state.intervalId);\n    this.audio.pause();\n    this.audio.currentTime = 0;\n    this.props.blockButtonsIfPlaying(false);\n  }\n\n\n  render() {\n    return (\n      <div className=\"timer-box\">\n        <p id=\"timer-label\">{!this.state.isBreak ? \"Session\" : \"Break\"}</p>\n        <p id=\"time-left\">\n          {this.props.timerMinute < 10\n            ? \"0\" + this.props.timerMinute\n            : this.props.timerMinute}\n          :\n          {this.state.timerSecond < 10\n            ? \"0\" + this.state.timerSecond\n            : this.state.timerSecond}\n        </p>\n        <button id=\"start_stop\" onClick={this.handleClick}>\n          {this.state.isRunning ? \"Stop\" : \"Start\"}\n        </button>\n        <button id=\"reset\" onClick={this.reset}>\n          Reset\n        </button>\n        <audio\n          id=\"beep\"\n          ref={(audio) => {this.audio = audio}}\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n        ></audio>\n      </div>\n    );\n  }\n}\nexport default Timer;\n  ","import React from \"react\";\n\nfunction Session(props) {\n\n  function decrementSessionLength() {\n\n    if (props.sessionLength === 1) {\n      return;\n    } else {\n      props.decrementSessionLength();\n    }\n  }\n\n  function incrementSessionLength() {\n\n    if (props.sessionLength === 60) {\n      return;\n    } else {\n      props.incrementSessionLength();\n    }\n  }\n\n  return (\n    <section>\n      <p id=\"session-label\">Session Length</p>\n      <div className=\"breakAndSessionBox\">\n        <button disabled={props.isPlaying ? \"disabled\" : \"\"} id=\"session-decrement\" onClick={decrementSessionLength}>\n          Down\n        </button>\n        <p id=\"session-length\">{props.sessionLength}</p>\n        <button disabled={props.isPlaying ? \"disabled\" : \"\"} id=\"session-increment\" onClick={incrementSessionLength}>\n          Up\n        </button>\n      </div>\n    </section>\n  );\n}\n\nexport default Session;\n","import { render } from '@testing-library/react';\nimport React from 'react'\n\nfunction Break(props) {\n\n    function decrementBreakLength() {\n        if (props.breakLength === 1) {\n            return \n        } else {\n            props.decrementBreakLength();\n        }\n    }\n\n    function incrementBreakLength() {\n        if (props.breakLength === 60) {\n            return\n        } else {\n            props.incrementBreakLength();\n        }\n    }\n\n    return (\n        <section>\n            <p id=\"break-label\">Break Length</p>\n            <div className=\"breakAndSessionBox\">\n                <button disabled={props.isPlaying ? \"disabled\" : \"\"} id=\"break-decrement\" onClick={decrementBreakLength}>Down</button>\n                <p id=\"break-length\">{props.breakLength}</p>\n                <button disabled={props.isPlaying ? \"disabled\" : \"\"} id=\"break-increment\" onClick={incrementBreakLength}>Up</button>\n            </div>\n        </section>\n    )\n}\n\nexport default Break;","import \"../App.css\";\nimport Timer from \"./Timer\";\nimport Session from \"./Session\";\nimport Break from \"./Break\";\nimport React from \"react\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timerMinute: 25,\n      breakLength: 5,\n      sessionLength: 25,\n      isPlaying: false\n    };\n\n    this.onDecrementBreakLength = this.onDecrementBreakLength.bind(this);\n    this.onIncrementBreakLength = this.onIncrementBreakLength.bind(this);\n    this.onIncrementSessionLength = this.onIncrementSessionLength.bind(this);\n    this.onDecrementSessionLength = this.onDecrementSessionLength.bind(this);\n    this.onDecrementTimerMinute = this.onDecrementTimerMinute.bind(this);\n    this.onSwitchToBreak = this.onSwitchToBreak.bind(this);\n    this.onReset = this.onReset.bind(this);\n    this.onSwitchToSession = this.onSwitchToSession.bind(this);\n    this.onBlockButtonsIfPlaying = this.onBlockButtonsIfPlaying.bind(this);\n  }\n\n  onBlockButtonsIfPlaying(value) {\n    this.setState({\n      isPlaying: value\n    })\n  }\n\n  onDecrementBreakLength() {\n    this.setState({\n      breakLength: this.state.breakLength - 1,\n    });\n  }\n\n  onIncrementBreakLength() {\n    this.setState({\n      breakLength: this.state.breakLength + 1,\n    });\n  }\n\n  onDecrementSessionLength() {\n    this.setState({\n      sessionLength: this.state.sessionLength - 1,\n      timerMinute: this.state.sessionLength - 1\n    });\n  }\n\n  onIncrementSessionLength() {\n    this.setState({\n      sessionLength: this.state.sessionLength + 1,\n      timerMinute: this.state.sessionLength + 1\n    });\n  }\n\n  onDecrementTimerMinute() {\n    this.setState({\n      timerMinute: this.state.timerMinute - 1,\n    });\n  }\n\n  onSwitchToBreak() {\n    this.setState({\n      timerMinute: this.state.breakLength\n    })\n  }\n\n  onSwitchToSession() {\n    this.setState({\n      timerMinute: this.state.sessionLength\n    })\n  }\n\n  onReset() {\n    this.setState({\n      timerMinute: 25,\n      breakLength: 5,\n      sessionLength: 25\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h2>Test</h2>\n        <Timer\n          blockButtonsIfPlaying={this.onBlockButtonsIfPlaying}\n          reset={this.onReset}\n          switchToSession={this.onSwitchToSession}\n          switchToBreak={this.onSwitchToBreak}\n          timerMinute={this.state.timerMinute}\n          decrementTimerMinute={this.onDecrementTimerMinute}\n        />\n        <section className=\"breakAndSessionBoxInApp\">\n          <Break\n            isPlaying={this.state.isPlaying}\n            breakLength={this.state.breakLength}\n            decrementBreakLength={this.onDecrementBreakLength}\n            incrementBreakLength={this.onIncrementBreakLength}\n          />\n          <Session\n            isPlaying={this.state.isPlaying}\n            sessionLength={this.state.sessionLength}\n            decrementSessionLength={this.onDecrementSessionLength}\n            incrementSessionLength={this.onIncrementSessionLength}\n          />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}